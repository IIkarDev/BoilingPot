<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:BoilingPot.ViewModels" 
        xmlns:v="using:BoilingPot.Views" 
        xmlns:components="using:BoilingPot.Views.Components" 
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="1000" d:DesignHeight="600" 
        x:Class="BoilingPot.Views.MainWindow"
        x:DataType="vm:MainViewModel" 
        Icon="/Assets/logo.ico"
        Title="Boiling Pot">

    <Design.DataContext>
        <vm:MainViewModel/>
    </Design.DataContext>

    <!-- DataTemplates для связи ViewModel и View (для ViewLocator) -->
    <!-- Можно определить здесь или в App.axaml (глобально) -->
    <!-- Если используете ViewLocator, эти шаблоны не нужны, ViewLocator найдет их сам -->
    <!-- Но если ViewLocator не находит View, можно явно задать DataTemplate здесь -->
    <!-- Пример (если ViewLocator не используется или не работает): -->
    
    <Window.DataTemplates>
        <DataTemplate DataType="{x:Type vm:HomeViewModel}">
            <v:HomeView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:CommonViewModel}">
            <v:CommonView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:MolecularViewModel}">
            <v:MolecularView/>
        </DataTemplate>
    </Window.DataTemplates>

    <!-- Главный Grid для компоновки -->
    <Grid> <!-- Одна колонка для ControlPanel, вторая для основного контента -->

        <!-- Панель навигации ControlPanel (слева) -->
        <v:HomeView 
                    IsVisible="{Binding IsHomeViewSelected}"
                    Margin="5"/> <!-- Отступ -->

        <!-- Область основного контента (справа) -->
        <Grid ColumnDefinitions="Auto,*">
            <components:ControlPanelView Grid.Column="0" 
                IsVisible="{Binding !IsHomeViewSelected}"/>
            <!-- ContentControl для отображения текущего View (Home, Common, Molecular) -->
            <!-- Видимость переключается через IsHomeViewSelected / NotIsHomeViewSelected -->
            <ContentControl Grid.Column="1"
                            Content="{Binding CurrentViewModel}"
                            IsVisible="{Binding !IsHomeViewSelected}"
                            Margin="5"/> <!-- Отступ от ControlPanel и краев -->

            <!-- HomeView отображается отдельно, когда IsHomeViewSelected = true -->
            <!-- Помещаем его в тот же Grid.Column="1" -->
 

            <!-- Панели DataPanel и AboutView и SettingsView отображаются поверх основного контента -->
            <!-- Их видимость управляется свойствами IsShowing... -->

            <!-- Панель данных DataPanelView -->
            <!-- Привязываем DataContext, если у нее свой VM, или оставляем, чтобы унаследовала MainVM -->
            <ContentControl Grid.Column="1"
                IsVisible="{Binding !IsHomeViewSelected}">
                <ContentControl IsVisible="{Binding !SettingsVM.GeneralSettings.IsDataPanelOnLeft}">
                    <components:DataPanelView IsVisible="{Binding SettingsVM.GeneralSettings.ShowDataPanelButton}"/>
                </ContentControl>
            </ContentControl>


            <!-- Панель "О программе" AboutView -->


        </Grid>
        <v:AboutView 
                     IsVisible="{Binding IsShowingAbout}"/>

        <!-- Панель "Настройки" SettingsView -->
        <!-- DataContext привязан к SettingsVM, видимостью управляет IsShowingSettings -->
        <v:SettingsView 
                        IsVisible="{Binding IsShowingSettings }"
                        DataContext="{Binding SettingsVM}"/>
    </Grid>
</Window>