<!-- Views/MolecularView.axaml -->
<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:vm="using:BoilingPot.ViewModels" 
             xmlns:converters="using:BoilingPot.Converters" 
             xmlns:components="using:BoilingPot.ViewModels.Components" 
             xmlns:media="using:Avalonia.Media" 
             mc:Ignorable="d" d:DesignWidth="400" d:DesignHeight="500"
             x:Class="BoilingPot.Views.MolecularView"
             x:DataType="vm:MolecularViewModel"> <!-- Связь с ViewModel -->

    <Design.DataContext>
        <!-- Для предпросмотра - создаем фиктивный ViewModel -->
        <vm:MolecularViewModel/>
    </Design.DataContext>

    <UserControl.Resources>
        <ResourceDictionary>
            <!-- Регистрируем конвертеры, если они не глобальные в App.axaml -->
            <!-- <converters:MultiplyDurationConverter x:Key="MultiplyDurationConverter"/> -->
            <!-- <converters:FlameToOffsetConverter x:Key="FlameToOffsetConverter"/> -->
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Background="{DynamicResource ThemeBackgroundColor}"> <!-- Фон из темы -->
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="20"/> <!-- Левая стенка -->
            <ColumnDefinition Width="*"/>  <!-- Содержимое -->
            <ColumnDefinition Width="20"/> <!-- Правая стенка -->
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>  <!-- Содержимое -->
            <RowDefinition Height="20"/> <!-- Дно -->
        </Grid.RowDefinitions>

        <!-- Стенки кастрюли -->
        <Border Grid.Column="0" Grid.Row="0" Background="{DynamicResource DarkAccentColor}"/> <!-- Левая -->
        <Border Grid.Column="2" Grid.Row="0" Background="{DynamicResource DarkAccentColor}"/> <!-- Правая -->
        <Border Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="3" Background="{DynamicResource MainAccentColor}"/> <!-- Дно (темнее) -->

        <!-- Область для пузырьков -->
        <!-- ItemsSource привязан к коллекции Bubbles в MolecularViewModel -->
        <!-- ItemsPanelTemplate="Canvas" позволяет позиционировать элементы с Canvas.Left/Top -->
        <ItemsControl Grid.Column="1" Grid.Row="0" ItemsSource="{Binding Bubbles}">
            <!-- Используем Canvas для позиционирования элементов из ItemsSource -->
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Canvas/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>

            <!-- Шаблон для одного пузырька -->
            <ItemsControl.ItemTemplate>
                <!-- x:DataType для компиляции привязок внутри шаблона -->
                <DataTemplate x:DataType="components:BubbleViewModel">
                    <!-- Эллипс представляет пузырек -->
                    <Ellipse
                             Width="{Binding Size}"  
                             Height="{Binding Size}" 
                             Fill="{Binding ColorBrush}"
                             Canvas.Left="{Binding X}"   
                             Canvas.Top="{Binding Y}"    
                             RenderTransformOrigin="0.5,0.5">
                        <!-- Трансформации могут понадобиться для других эффектов, не позиционирования -->
                        <Ellipse.RenderTransform>
                             <TransformGroup>
                                 <ScaleTransform ScaleX="1" ScaleY="1"/>
                                 <TranslateTransform X="0" Y="0"/>
                             </TransformGroup>
                         </Ellipse.RenderTransform>

                        <!-- Стили анимации для пузырьков, если они не управляются в C# -->
                        <!-- В данном подходе позиция управляется в C#, поэтому XAML-анимация позиций НЕ НУЖНА -->
                        <!-- XAML-анимация может использоваться для мигания, изменения размера, вращения и т.д. -->
                         <!--
                        <Ellipse.Styles>
                            <Style Selector="Ellipse">
                                <Setter Property="Stroke" Value="Transparent"/>
                                <Setter Property="StrokeThickness" Value="0"/>
                                <Style.Animations>
                                    <Animation Duration="{Binding AnimationDuration}" ...>
                                        <KeyFrame ...><Setter Property="Opacity" .../></KeyFrame>
                                    </Animation>
                                </Style.Animations>
                            </Style>
                        </Ellipse.Styles>
                         -->
                    </Ellipse>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>

        <!-- Имитация нагрева снизу (градиент) -->
        <Border Grid.Column="1" Grid.Row="0" VerticalAlignment="Bottom" Height="50" Opacity="0.4">
            <Border.Background>
                <!-- Градиент от красного снизу до прозрачного сверху -->
                <LinearGradientBrush StartPoint="0,1" EndPoint="0,0">
                    <!-- Цвет и Offset могут зависеть от свойств ViewModel -->
                    <GradientStop Color="OrangeRed" Offset="0"/>
                    <!-- Offset="{Binding HeatIntensity, Converter={StaticResource HeatToGradientOffsetConverter}}" -->
                    <GradientStop Color="Transparent" Offset="1"/>
                </LinearGradientBrush>
            </Border.Background>
        </Border>

        <!-- (Опционально) Кнопки управления симуляцией -->
        <StackPanel Grid.Column="1" Grid.Row="0" VerticalAlignment="Top" HorizontalAlignment="Center" Orientation="Horizontal" Spacing="10" Margin="0,10,0,0">
             <Button Content="Старт" Command="{Binding StartSimulationCommand}"/>
             <Button Content="Стоп" Command="{Binding StopSimulationCommand}"/>
             <!-- Элементы управления скоростью/нагревом -->
             <!-- <Slider Width="100" Minimum="0" Maximum="10" Value="{Binding SimulationSpeed}"/> -->
        </StackPanel>
    </Grid>
</UserControl>